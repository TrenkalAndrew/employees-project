{"version":3,"sources":["api/index.js","actions/employees.js","components/verticalCard/VerticalCard.jsx","containers/employees/Employees.jsx","pages/home/Home.jsx"],"names":["api","axios","create","baseURL","BASE_URL","apis","getEmployees","get","ALL_EMPLOYEES_URL","getEmployeeById","id","EMPLOYEE_INFO_URL","createComment","userId","label","text","phone","post","EMPLOYEE_CREATE_COMMENT_URL","dispatch","fetchEmployeesStart","then","data","success","fetchEmployeesSuccess","fetchEmployeesFailure","message","catch","_","ERROR_MESSAGE","isFirstVisit","a","fetchEmployeeInfoStart","getEmployeeByIdWithApi","title","createCommentStart","createCommentSuccess","date","Date","getTime","createCommentFailure","type","FETCH_EMPLOYEES_START","employees","FETCH_EMPLOYEES_SUCCESS","payload","err","FETCH_EMPLOYEES_FAILURE","FETCH_EMPLOYEE_INFO_START","fetchEmployeeInfoFailure","FETCH_EMPLOYEE_INFO_FAILURE","FETCH_CREATE_COMMENT_START","comment","FETCH_CREATE_COMMENT_SUCCESS","FETCH_CREATE_COMMENT_FAILURE","employee","FETCH_EMPLOYEE_INFO_SUCCESS","VerticalCard","imageSrc","alt","url","firstName","lastName","position","children","classes","className","Image","src","to","defaultProps","connect","state","useEffect","items","map","imageUrl","key","Home"],"mappings":"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","file":"static/js/5.e0b32f4f.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { BASE_URL, EMPLOYEE_INFO_URL, ALL_EMPLOYEES_URL, EMPLOYEE_CREATE_COMMENT_URL } from '../const';\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nconst getEmployees = () => api.get(ALL_EMPLOYEES_URL);\r\nconst getEmployeeById = id => api.get(`${EMPLOYEE_INFO_URL}/${id}`);\r\nconst createComment = (userId, label, text, phone) => api.post(EMPLOYEE_CREATE_COMMENT_URL, {id: userId, label, text, phone});\r\n\r\nconst apis = {\r\n  getEmployees,\r\n  getEmployeeById,\r\n  createComment\r\n};\r\n\r\nexport default apis;\r\n","import api from '../api';\r\nimport {\r\n  ERROR_MESSAGE,\r\n  FETCH_EMPLOYEES_START,\r\n  FETCH_EMPLOYEES_SUCCESS,\r\n  FETCH_EMPLOYEES_FAILURE,\r\n  FETCH_EMPLOYEE_INFO_START,\r\n  FETCH_EMPLOYEE_INFO_SUCCESS,\r\n  FETCH_EMPLOYEE_INFO_FAILURE,\r\n  FETCH_CREATE_COMMENT_START,\r\n  FETCH_CREATE_COMMENT_SUCCESS,\r\n  FETCH_CREATE_COMMENT_FAILURE\r\n} from '../const';\r\n\r\nexport const getEmployees = dispatch => {\r\n  dispatch(fetchEmployeesStart());\r\n\r\n  api\r\n    .getEmployees()\r\n    .then(({ data }) => {\r\n      const { success } = data;\r\n\r\n      if (success) {\r\n        dispatch(fetchEmployeesSuccess(data.data));\r\n      } else {\r\n        dispatch(fetchEmployeesFailure(data.message));\r\n      }\r\n    })\r\n    .catch(_ => dispatch(fetchEmployeesFailure(ERROR_MESSAGE)));\r\n};\r\n\r\nexport const getEmployeeById = (id, isFirstVisit) => dispatch => {\r\n  //Если пользователь перезагрузил страницу, то необходимо загрузить достаточные данные для карусели, после чего подгрузить данные для карточки\r\n  if (isFirstVisit) {\r\n    dispatch(fetchEmployeesStart());\r\n\r\n    api\r\n      .getEmployees()\r\n      .then(async ({ data }) => {\r\n        const { success } = data;\r\n\r\n        if (success) {\r\n          dispatch(fetchEmployeesSuccess(data.data));\r\n\r\n          dispatch(fetchEmployeeInfoStart());\r\n\r\n          getEmployeeByIdWithApi(id, dispatch);\r\n        } else {\r\n          dispatch(fetchEmployeesFailure(data.message));\r\n        }\r\n      })\r\n      .catch(_ => dispatch(fetchEmployeesFailure(ERROR_MESSAGE)));\r\n  } else {\r\n    dispatch(fetchEmployeeInfoStart());\r\n\r\n    getEmployeeByIdWithApi(id, dispatch);\r\n  }\r\n};\r\n\r\nexport const createComment = (userId, title, text, phone) => dispatch => {\r\n  dispatch(createCommentStart());\r\n\r\n  api\r\n\r\n    .createComment(userId, title, text, phone)\r\n    .then(({ data }) => {\r\n      const { success } = data;\r\n\r\n      if (success) {\r\n        dispatch(createCommentSuccess({id: userId, title, text, phone, date: new Date().getTime()}));\r\n      } else {\r\n        dispatch(createCommentFailure(data.message));\r\n      }\r\n    })\r\n    .catch(_ => dispatch(createCommentFailure(ERROR_MESSAGE)));\r\n};\r\n\r\nconst fetchEmployeesStart = () => ({\r\n  type: FETCH_EMPLOYEES_START,\r\n});\r\n\r\nconst fetchEmployeesSuccess = employees => ({\r\n  type: FETCH_EMPLOYEES_SUCCESS,\r\n  payload: employees,\r\n});\r\n\r\nconst fetchEmployeesFailure = err => ({\r\n  type: FETCH_EMPLOYEES_FAILURE,\r\n  payload: err,\r\n});\r\n\r\nconst fetchEmployeeInfoStart = () => ({\r\n  type: FETCH_EMPLOYEE_INFO_START,\r\n});\r\n\r\nconst fetchEmployeeInfoSuccess = employee => ({\r\n  type: FETCH_EMPLOYEE_INFO_SUCCESS,\r\n  payload: employee,\r\n});\r\n\r\nconst fetchEmployeeInfoFailure = err => ({\r\n  type: FETCH_EMPLOYEE_INFO_FAILURE,\r\n  payload: err,\r\n});\r\n\r\nconst createCommentStart = () => ({\r\n  type: FETCH_CREATE_COMMENT_START,\r\n});\r\n\r\nconst createCommentSuccess = comment => ({\r\n  type: FETCH_CREATE_COMMENT_SUCCESS,\r\n  payload: comment,\r\n});\r\n\r\nconst createCommentFailure = err => ({\r\n  type: FETCH_CREATE_COMMENT_FAILURE,\r\n  payload: err,\r\n});\r\n\r\nconst getEmployeeByIdWithApi = (id, dispatch) => {\r\n  api\r\n    .getEmployeeById(id)\r\n    .then(({ data }) => {\r\n      const { success } = data;\r\n\r\n      if (success) {\r\n        dispatch(fetchEmployeeInfoSuccess(data.data));\r\n      } else {\r\n        dispatch(fetchEmployeeInfoFailure(data.message));\r\n      }\r\n    })\r\n    .catch(fetchEmployeeInfoFailure(ERROR_MESSAGE));\r\n};\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Image from '../image/Image';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst VerticalCard = ({ id, imageSrc, alt, firstName, lastName, position, url, children, classes }) => {\r\n  return (\r\n    <div className={classes}>\r\n      <div className=\"card\">\r\n        <div className=\"card-image\">\r\n          <Image src={imageSrc} alt={alt} />\r\n        </div>\r\n        <div className=\"card-content\">{children}</div>\r\n        <div className=\"card-action\">\r\n          <Link to={url}>More info</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nVerticalCard.propTypes = {\r\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  imageSrc: PropTypes.string.isRequired,\r\n  url: PropTypes.string,\r\n  firstName: PropTypes.string,\r\n  lastName: PropTypes.string,\r\n  position: PropTypes.string,\r\n};\r\n\r\nVerticalCard.defaultProps = {\r\n  url: '/',\r\n  firstName: '',\r\n  lastName: '',\r\n  position: '',\r\n};\r\n\r\nexport default VerticalCard;\r\n","import React, { useEffect } from 'react';\r\nimport './style.scss';\r\nimport { connect } from 'react-redux';\r\nimport { getEmployees } from '../../actions/employees';\r\nimport VerticalCard from '../../components/verticalCard/VerticalCard';\r\nimport { EMPLOYEE_INFO_URL } from '../../const';\r\n\r\nconst Employees = ({ getEmployees, employees }) => {\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, [getEmployees]);\r\n\r\n  const { items } = employees;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Our team</h1>\r\n      {items.map(({ id, firstName, lastName, position, imageUrl }) => (\r\n        <VerticalCard\r\n          classes=\"col s12 m6 xl4\"\r\n          key={id}\r\n          id={id}\r\n          imageSrc={imageUrl}\r\n          alt={`${firstName} ${lastName} - ${position}`}\r\n          url={`${EMPLOYEE_INFO_URL}/${id}`}\r\n        >\r\n          <div title={`${firstName} ${lastName}`}>\r\n            <b>\r\n              {firstName} {lastName}\r\n            </b>\r\n          </div>\r\n          <div title={position}>\r\n            Position: <b>{position}</b>\r\n          </div>\r\n        </VerticalCard>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  employees: state.employees,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getEmployees: () => dispatch(getEmployees),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Employees);\r\n","import React from 'react';\r\nimport Employees from '../../containers/employees/Employees';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main className=\"container layout\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12\">\r\n          <Employees />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}