{"version":3,"sources":["api/index.js","actions/employees.js","components/horizontalCard/HorizontalCard.jsx","Helpers/helper.js","containers/input/TextInput.jsx","containers/textarea/Textarea.jsx","containers/form/Form.jsx","components/sliderNavButton/SliderNavButton.jsx","containers/slider/Slider.jsx","components/slide/Slide.jsx","pages/employeeInfo/EmployeeInfo.jsx"],"names":["api","axios","create","baseURL","BASE_URL","apis","getEmployees","get","ALL_EMPLOYEES_URL","getEmployeeById","id","EMPLOYEE_INFO_URL","createComment","userId","label","text","phone","post","EMPLOYEE_CREATE_COMMENT_URL","dispatch","fetchEmployeesStart","then","data","success","fetchEmployeesSuccess","fetchEmployeesFailure","message","catch","_","ERROR_MESSAGE","isFirstVisit","a","fetchEmployeeInfoStart","getEmployeeByIdWithApi","title","createCommentStart","createCommentSuccess","date","Date","getTime","createCommentFailure","type","FETCH_EMPLOYEES_START","employees","FETCH_EMPLOYEES_SUCCESS","payload","err","FETCH_EMPLOYEES_FAILURE","FETCH_EMPLOYEE_INFO_START","fetchEmployeeInfoFailure","FETCH_EMPLOYEE_INFO_FAILURE","FETCH_CREATE_COMMENT_START","comment","FETCH_CREATE_COMMENT_SUCCESS","FETCH_CREATE_COMMENT_FAILURE","employee","FETCH_EMPLOYEE_INFO_SUCCESS","HorizontalCard","imageSrc","alt","url","linkText","children","className","Image","src","to","defaultProps","getNormalizePartOfDate","digit","TextInput","state","isFocused","onHandleFocus","setState","onHandleBlur","e","onChange","props","target","value","this","size","name","withError","errorText","onFocus","onBlur","htmlFor","PureComponent","Textarea","Form","isValidForm","isValidFields","errorMessages","rules","required","minLength","maxLength","match","onHandleChange","newState","checkValidField","field","rule","REQUIRED_RULE","REQUIRED_ERROR_MESSAGE","checkValidForm","MIN_LENGTH_RULE","length","MIN_LENGTH_ERROR_MESSAGE","MAX_LENGTH_RULE","MAX_LENGTH_ERROR_MESSAGE","MATCH_REGEXP_RULE","test","MATCH_RULE_ERROR_MESSAGE","onHandleSubmit","submitHandler","preventDefault","onSubmit","disabled","Component","SliderNavButton","position","clickFunction","classes","Classnames","onClick","Slider","activeIndex","navBtnHandleClick","step","newActiveIndex","renderFunction","withNavButtons","style","transform","Slide","item","imageUrl","firstName","lastName","EmployeeInfo","renderFunctionForSlider","items","map","index","active","key","pathname","location","Number","split","getEmployeeId","find","address","comments","sortedComments","sort","b","slice","Object","keys","Math","random","dateTime","ms","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getNormalizedDate","connect"],"mappings":"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","file":"static/js/4.caac9eab.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { BASE_URL, EMPLOYEE_INFO_URL, ALL_EMPLOYEES_URL, EMPLOYEE_CREATE_COMMENT_URL } from '../const';\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nconst getEmployees = () => api.get(ALL_EMPLOYEES_URL);\r\nconst getEmployeeById = id => api.get(`${EMPLOYEE_INFO_URL}/${id}`);\r\nconst createComment = (userId, label, text, phone) => api.post(EMPLOYEE_CREATE_COMMENT_URL, {id: userId, label, text, phone});\r\n\r\nconst apis = {\r\n  getEmployees,\r\n  getEmployeeById,\r\n  createComment\r\n};\r\n\r\nexport default apis;\r\n","import api from '../api';\r\nimport {\r\n  ERROR_MESSAGE,\r\n  FETCH_EMPLOYEES_START,\r\n  FETCH_EMPLOYEES_SUCCESS,\r\n  FETCH_EMPLOYEES_FAILURE,\r\n  FETCH_EMPLOYEE_INFO_START,\r\n  FETCH_EMPLOYEE_INFO_SUCCESS,\r\n  FETCH_EMPLOYEE_INFO_FAILURE,\r\n  FETCH_CREATE_COMMENT_START,\r\n  FETCH_CREATE_COMMENT_SUCCESS,\r\n  FETCH_CREATE_COMMENT_FAILURE\r\n} from '../const';\r\n\r\nexport const getEmployees = dispatch => {\r\n  dispatch(fetchEmployeesStart());\r\n\r\n  api\r\n    .getEmployees()\r\n    .then(({ data }) => {\r\n      const { success } = data;\r\n\r\n      if (success) {\r\n        dispatch(fetchEmployeesSuccess(data.data));\r\n      } else {\r\n        dispatch(fetchEmployeesFailure(data.message));\r\n      }\r\n    })\r\n    .catch(_ => dispatch(fetchEmployeesFailure(ERROR_MESSAGE)));\r\n};\r\n\r\nexport const getEmployeeById = (id, isFirstVisit) => dispatch => {\r\n  //Если пользователь перезагрузил страницу, то необходимо загрузить достаточные данные для карусели, после чего подгрузить данные для карточки\r\n  if (isFirstVisit) {\r\n    dispatch(fetchEmployeesStart());\r\n\r\n    api\r\n      .getEmployees()\r\n      .then(async ({ data }) => {\r\n        const { success } = data;\r\n\r\n        if (success) {\r\n          dispatch(fetchEmployeesSuccess(data.data));\r\n\r\n          dispatch(fetchEmployeeInfoStart());\r\n\r\n          getEmployeeByIdWithApi(id, dispatch);\r\n        } else {\r\n          dispatch(fetchEmployeesFailure(data.message));\r\n        }\r\n      })\r\n      .catch(_ => dispatch(fetchEmployeesFailure(ERROR_MESSAGE)));\r\n  } else {\r\n    dispatch(fetchEmployeeInfoStart());\r\n\r\n    getEmployeeByIdWithApi(id, dispatch);\r\n  }\r\n};\r\n\r\nexport const createComment = (userId, title, text, phone) => dispatch => {\r\n  dispatch(createCommentStart());\r\n\r\n  api\r\n\r\n    .createComment(userId, title, text, phone)\r\n    .then(({ data }) => {\r\n      const { success } = data;\r\n\r\n      if (success) {\r\n        dispatch(createCommentSuccess({id: userId, title, text, phone, date: new Date().getTime()}));\r\n      } else {\r\n        dispatch(createCommentFailure(data.message));\r\n      }\r\n    })\r\n    .catch(_ => dispatch(createCommentFailure(ERROR_MESSAGE)));\r\n};\r\n\r\nconst fetchEmployeesStart = () => ({\r\n  type: FETCH_EMPLOYEES_START,\r\n});\r\n\r\nconst fetchEmployeesSuccess = employees => ({\r\n  type: FETCH_EMPLOYEES_SUCCESS,\r\n  payload: employees,\r\n});\r\n\r\nconst fetchEmployeesFailure = err => ({\r\n  type: FETCH_EMPLOYEES_FAILURE,\r\n  payload: err,\r\n});\r\n\r\nconst fetchEmployeeInfoStart = () => ({\r\n  type: FETCH_EMPLOYEE_INFO_START,\r\n});\r\n\r\nconst fetchEmployeeInfoSuccess = employee => ({\r\n  type: FETCH_EMPLOYEE_INFO_SUCCESS,\r\n  payload: employee,\r\n});\r\n\r\nconst fetchEmployeeInfoFailure = err => ({\r\n  type: FETCH_EMPLOYEE_INFO_FAILURE,\r\n  payload: err,\r\n});\r\n\r\nconst createCommentStart = () => ({\r\n  type: FETCH_CREATE_COMMENT_START,\r\n});\r\n\r\nconst createCommentSuccess = comment => ({\r\n  type: FETCH_CREATE_COMMENT_SUCCESS,\r\n  payload: comment,\r\n});\r\n\r\nconst createCommentFailure = err => ({\r\n  type: FETCH_CREATE_COMMENT_FAILURE,\r\n  payload: err,\r\n});\r\n\r\nconst getEmployeeByIdWithApi = (id, dispatch) => {\r\n  api\r\n    .getEmployeeById(id)\r\n    .then(({ data }) => {\r\n      const { success } = data;\r\n\r\n      if (success) {\r\n        dispatch(fetchEmployeeInfoSuccess(data.data));\r\n      } else {\r\n        dispatch(fetchEmployeeInfoFailure(data.message));\r\n      }\r\n    })\r\n    .catch(fetchEmployeeInfoFailure(ERROR_MESSAGE));\r\n}\r\n","import React from 'react';\r\nimport Image from '../image/Image';\r\nimport './style.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HorizontalCard = ({ title, imageSrc, alt, url, linkText, children }) => {\r\n  return (\r\n    <div className=\"col s12\">\r\n      {title && <h2 className=\"header\">{title}</h2>}\r\n      <div className=\"card horizontal\">\r\n        <div className=\"card-image\">\r\n          <span>\r\n            <Image src={imageSrc} alt={alt} />\r\n          </span>\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">{children}</div>\r\n          <div className=\"card-action\">\r\n            <Link to={url}>{linkText}</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHorizontalCard.propTypes = {\r\n  imageSrc: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  url: PropTypes.string,\r\n  title: PropTypes.string,\r\n  linkText: PropTypes.string,\r\n};\r\n\r\nHorizontalCard.defaultProps = {\r\n  url: '/',\r\n  linkText: 'Come back',\r\n};\r\n\r\nexport default HorizontalCard;\r\n","export const getNormalizedDate = (ms) => {\r\n  const date = new Date(Number(ms));\r\n\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth();\r\n  const day = date.getDate();\r\n\r\n  const hours = date.getHours();\r\n  const minutes = date.getMinutes();\r\n  const seconds = date.getSeconds();\r\n\r\n  return `${getNormalizePartOfDate(day)}.${getNormalizePartOfDate(month)}.${year} ${getNormalizePartOfDate(hours)}:${getNormalizePartOfDate(minutes)}:${getNormalizePartOfDate(seconds)}`\r\n};\r\n\r\nconst getNormalizePartOfDate = (digit) => {\r\n  return digit < 10 ? '0' + digit : digit\r\n};","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nclass TextInput extends PureComponent {\r\n  state = {\r\n    isFocused: false,\r\n  };\r\n\r\n  onHandleFocus = () => {\r\n    this.setState({isFocused: true});\r\n  };\r\n\r\n  onHandleBlur = (e) => {\r\n    const {onChange} = this.props;\r\n    if (!e.target.value) this.setState({isFocused: false});\r\n\r\n    onChange(e);\r\n  };\r\n\r\n  render() {\r\n    const {type, label, size, name, withError, errorText} = this.props;\r\n    const {isFocused} = this.state;\r\n\r\n    return (\r\n      <div className={`input-field col s${size}`}>\r\n        <input type={type} id={name}\r\n           onFocus={this.onHandleFocus} onBlur={this.onHandleBlur} name={name}  />\r\n        <label htmlFor={name} className={isFocused ? 'active' : ''}>{label}</label>\r\n        {withError && <span className={'form-error-message'}>{errorText}</span>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTextInput.propTypes = {\r\n  type: PropTypes.oneOf(['text', 'password']),\r\n  label: PropTypes.string.isRequired,\r\n  size: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  type: 'text',\r\n  size: 6,\r\n  onChange: () => {},\r\n  name: ''\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Textarea extends PureComponent {\r\n  state = {\r\n    isFocused: false,\r\n  };\r\n\r\n  onHandleFocus = () => {\r\n    this.setState({ isFocused: true });\r\n  };\r\n\r\n  onHandleBlur = (e) => {\r\n    const {onChange} = this.props;\r\n    if (!e.target.value) this.setState({isFocused: false});\r\n\r\n    onChange(e);\r\n  };\r\n\r\n  render() {\r\n    const { label, size, name, withError, errorText } = this.props;\r\n    const { isFocused } = this.state;\r\n\r\n    return (\r\n      <div className={`input-field col s${size}`}>\r\n        <textarea\r\n          id={name}\r\n          onFocus={this.onHandleFocus}\r\n          className=\"materialize-textarea\"\r\n          onBlur={this.onHandleBlur}\r\n          name={name}\r\n        />\r\n        <label htmlFor={name} className={isFocused ? 'active' : ''}>\r\n          {label}\r\n        </label>\r\n        {withError && <span className={'form-error-message'}>{errorText}</span>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTextarea.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  size: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  name: PropTypes.string,\r\n};\r\n\r\nTextarea.defaultProps = {\r\n  size: 6,\r\n  value: '',\r\n  onChange: () => {},\r\n  name: '',\r\n};\r\n\r\nexport default Textarea;\r\n","import React, { Component } from 'react';\r\nimport TextInput from '../input/TextInput';\r\nimport Textarea from '../textarea/Textarea';\r\nimport {\r\n  MATCH_REGEXP_RULE, MATCH_RULE_ERROR_MESSAGE,\r\n  MAX_LENGTH_ERROR_MESSAGE,\r\n  MAX_LENGTH_RULE,\r\n  MIN_LENGTH_ERROR_MESSAGE,\r\n  MIN_LENGTH_RULE,\r\n  REQUIRED_ERROR_MESSAGE,\r\n  REQUIRED_RULE,\r\n} from '../../const';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    isValidForm: false,\r\n    title: '',\r\n    text: '',\r\n    phone: '',\r\n    isValidFields: {\r\n      title: false,\r\n      text: false,\r\n      phone: false\r\n    },\r\n    errorMessages: {\r\n      title: '',\r\n      text: '',\r\n      phone: ''\r\n    },\r\n    rules: {\r\n      title: {\r\n        required: true,\r\n        minLength: 5,\r\n        maxLength: 80\r\n      },\r\n      text: {\r\n        required: true,\r\n        maxLength: 128\r\n      },\r\n      phone: {\r\n        required: true,\r\n        match: /^((\\+7|7|8)+([0-9]){10})$/\r\n      }\r\n    }\r\n  };\r\n\r\n  onHandleChange = ({target}) => {\r\n    const {name, value} = target;\r\n\r\n    this.setState(state => {\r\n      const newState = {...state};\r\n      newState[name] = value;\r\n      return newState;\r\n    }, () => this.checkValidField(name))\r\n  };\r\n\r\n  checkValidField = (field) => {\r\n    const value = this.state[field];\r\n    const rules = this.state.rules[field];\r\n\r\n    for(let rule in rules) {\r\n      if (rule === REQUIRED_RULE) {\r\n        if (!value) {\r\n          this.setState(state => {\r\n            const newState = {...state};\r\n\r\n            newState.errorMessages[field] = REQUIRED_ERROR_MESSAGE;\r\n            newState[`${field}Valid`] = false;\r\n            newState.isValidFields[field] = false;\r\n\r\n            return newState;\r\n          }, () => this.checkValidForm());\r\n\r\n          return false;\r\n        }\r\n      }\r\n      else if (rule === MIN_LENGTH_RULE) {\r\n        if (value.length < rules[rule]) {\r\n          this.setState(state => {\r\n            const newState = {...state};\r\n\r\n            newState.errorMessages[field] = `${MIN_LENGTH_ERROR_MESSAGE} ${rules[rule]} symbols`;\r\n            newState.isValidFields[field] = false;\r\n            return newState;\r\n\r\n          }, () => this.checkValidForm());\r\n\r\n          return false;\r\n        }\r\n      }\r\n      else if (rule === MAX_LENGTH_RULE) {\r\n        if (value.length > rules[rule]) {\r\n          this.setState(state => {\r\n            const newState = {...state};\r\n\r\n            newState.errorMessages[field] = `${MAX_LENGTH_ERROR_MESSAGE} ${rules[rule]} symbols`;\r\n            newState.isValidFields[field] = false;\r\n\r\n            return newState;\r\n          }, () => this.checkValidForm());\r\n\r\n          return false;\r\n        }\r\n      }\r\n      else if (rule === MATCH_REGEXP_RULE) {\r\n        const pattern = rules[rule];\r\n        if (!pattern.test(value)) {\r\n          this.setState(state => {\r\n            const newState = {...state};\r\n\r\n            newState.errorMessages[field] = `${MATCH_RULE_ERROR_MESSAGE} 0-9, '-', '+', '(', ')'`;\r\n            newState.isValidFields[field] = false;\r\n\r\n            return newState;\r\n          }, () => this.checkValidForm());\r\n\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState(state => {\r\n      const newState = {...state};\r\n      newState.isValidFields[field] = true;\r\n      newState.errorMessages[field] = '';\r\n\r\n      return newState;\r\n    }, () => this.checkValidForm());\r\n  };\r\n\r\n  checkValidForm = () => {\r\n    const {isValidFields} = this.state;\r\n\r\n    for(let field in isValidFields) {\r\n      if (!isValidFields[field]) {\r\n        this.setState(state => {\r\n          return {...state, isValidForm: false}\r\n        });\r\n\r\n        return false;\r\n      }\r\n    }\r\n\r\n    this.setState((state) => {\r\n      return {...state, isValidForm: true}\r\n    })\r\n  };\r\n\r\n  onHandleSubmit = (e) => {\r\n    const {submitHandler, id} = this.props;\r\n    const {title, text, phone} = this.state;\r\n\r\n    e.preventDefault();\r\n\r\n    submitHandler(id, title, text, phone);\r\n  };\r\n\r\n  render() {\r\n    const {isValidForm, errorMessages} = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onHandleSubmit}>\r\n        <TextInput label='title' size={12} onChange={this.onHandleChange} name=\"title\" withError errorText={errorMessages['title']} />\r\n        <Textarea label='Text' size={12} onChange={this.onHandleChange} name=\"text\" withError errorText={errorMessages['text']} />\r\n        <TextInput label='Phone' size={12} onChange={this.onHandleChange} name=\"phone\" withError errorText={errorMessages['phone']} />\r\n        <button className=\"btn waves-effect waves-light\" disabled={!isValidForm}>Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport Classnames from 'classnames';\r\n\r\nconst SliderNavButton = ({position, clickFunction}) => {\r\n  const classes = Classnames('slider-nav-btn', {\r\n    'slider-nav-btn-left': position === 'left',\r\n    'slider-nav-btn-right': position === 'right',\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {position === 'left' ? (\r\n        <button className={classes} onClick={clickFunction}>&#8249;</button>\r\n      ) : (\r\n        <button className={classes} onClick={clickFunction}>&#8250;</button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SliderNavButton;\r\n","import React, { PureComponent } from 'react';\r\nimport './style.scss';\r\nimport PropTypes from 'prop-types';\r\nimport SliderNavButton from '../../components/sliderNavButton/SliderNavButton';\r\n\r\nclass Slider extends PureComponent {\r\n  state = {\r\n    activeIndex: 5,\r\n  };\r\n\r\n  navBtnHandleClick = step => {\r\n    const { data } = this.props;\r\n    const { activeIndex } = this.state;\r\n    let newActiveIndex = activeIndex + step;\r\n\r\n    if (newActiveIndex === -1) {\r\n      newActiveIndex = data.length - 1;\r\n    }\r\n    else if (newActiveIndex === data.length) {\r\n      newActiveIndex = 0\r\n    }\r\n\r\n    this.setState({\r\n      activeIndex: newActiveIndex\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { data, renderFunction, withNavButtons } = this.props;\r\n    const { activeIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col s12\">\r\n          <div className=\"slider-main\">\r\n            {withNavButtons && (\r\n              <SliderNavButton\r\n                position=\"left\"\r\n                clickFunction={() => this.navBtnHandleClick(-1)}\r\n              />\r\n            )}\r\n            <div className=\"cards-slider\">\r\n              <div\r\n                className=\"cards-slider-wrapper\"\r\n                style={{\r\n                  transform: `translateX(-${activeIndex *\r\n                    (100 / data.length)}%)`,\r\n                }}\r\n              >\r\n                {renderFunction(activeIndex, data)}\r\n              </div>\r\n            </div>\r\n            {withNavButtons && (\r\n              <SliderNavButton\r\n                position=\"right\"\r\n                clickFunction={() => this.navBtnHandleClick(1)}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSlider.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object),\r\n  renderFunction: PropTypes.func,\r\n  withNavButtons: PropTypes.bool,\r\n};\r\n\r\nexport default Slider;\r\n","import React from 'react';\r\nimport { EMPLOYEE_INFO_URL } from '../../const';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Slide = ({\r\n  classes,\r\n  item: { id, imageUrl, firstName, lastName, position },\r\n}) => {\r\n  return (\r\n    <div className={classes}>\r\n      <Link to={`${EMPLOYEE_INFO_URL}/${id}`}>\r\n        <img src={imageUrl} alt={`${firstName} ${lastName} - ${position}`} />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nSlide.propTypes = {\r\n  classes: PropTypes.string,\r\n  item: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    imageUrl: PropTypes.string,\r\n    firstName: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    position: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Slide;\r\n","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getEmployees,\r\n  getEmployeeById,\r\n  createComment,\r\n} from '../../actions/employees';\r\nimport HorizontalCard from '../../components/horizontalCard/HorizontalCard';\r\nimport { getNormalizedDate } from '../../Helpers/helper';\r\nimport Form from '../../containers/form/Form';\r\nimport Slider from '../../containers/slider/Slider';\r\nimport Slide from '../../components/slide/Slide';\r\nimport Classnames from 'classnames';\r\n\r\nclass EmployeeInfo extends PureComponent {\r\n  getEmployeeId() {\r\n    const { location } = this.props;\r\n    const { pathname } = location;\r\n\r\n    return Number(pathname.split('/')[2]);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { employees, getEmployeeById } = this.props;\r\n    const id = this.getEmployeeId();\r\n\r\n    //Если пользователь перезагрузил страницу, то необходимо загрузить достаточные данные для карусели, после чего подгрузить данные для карточки\r\n    if (employees.items.length) {\r\n      const employee = employees.items.find(employee => {\r\n        return employee.id === id;\r\n      });\r\n\r\n      if (!employee) {\r\n        getEmployeeById(id, true);\r\n      }\r\n\r\n      getEmployeeById(id, false);\r\n    } else {\r\n      getEmployeeById(id, true);\r\n    }\r\n  }\r\n\r\n  renderFunctionForSlider = (activeIndex, items) => {\r\n    return (\r\n      <>\r\n        {items.map((item, index) => {\r\n          const classes = Classnames('slide', {\r\n            active: index === activeIndex,\r\n          });\r\n\r\n          return <Slide key={index} classes={classes} item={item} />;\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { employees, createComment } = this.props;\r\n    const id = this.getEmployeeId();\r\n\r\n    const employee = employees.items.find(item => item.id === id) || {};\r\n\r\n    const {\r\n      imageUrl = '',\r\n      firstName = '',\r\n      lastName = '',\r\n      position = '',\r\n      address = '',\r\n      comments = [],\r\n    } = employee;\r\n\r\n    const sortedComments = comments.sort((a, b) => b.date - a.date).slice(0, 5);\r\n\r\n    return (\r\n      <main className=\"container layout\">\r\n        <Slider\r\n          data={employees.items}\r\n          renderFunction={this.renderFunctionForSlider}\r\n          withNavButtons={true}\r\n        />\r\n        {Object.keys(employee).length !== 0 && (\r\n          <>\r\n            <div className=\"row\">\r\n              <HorizontalCard\r\n                imageSrc={imageUrl}\r\n                alt={`${firstName} ${lastName} - ${position}`}\r\n              >\r\n                <h4>\r\n                  {firstName} {lastName}\r\n                </h4>\r\n                <div>\r\n                  Position: <span>{position}</span>\r\n                </div>\r\n                <div>\r\n                  Address: <span>{address}</span>\r\n                </div>\r\n                <div className=\"divider\"></div>\r\n                <div>Latest comments:</div>\r\n                {sortedComments.map(({ title, text, date }) => {\r\n                  return (\r\n                    <blockquote key={`${date}${Math.random()}`}>\r\n                      <time dateTime={date}>{getNormalizedDate(date)}</time>\r\n                      <div>\r\n                        <em>{title}</em>\r\n                      </div>\r\n                      <p>{text}</p>\r\n                    </blockquote>\r\n                  );\r\n                })}\r\n              </HorizontalCard>\r\n            </div>\r\n            <div className=\"row\">\r\n              <Form submitHandler={createComment} id={id} />\r\n            </div>\r\n          </>\r\n        )}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  employees: state.employees,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getEmployees: () => dispatch(getEmployees),\r\n  getEmployeeById: (id, isFirstVisit) =>\r\n    dispatch(getEmployeeById(id, isFirstVisit)),\r\n  createComment: (id, title, text, phone) =>\r\n    dispatch(createComment(id, title, text, phone)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EmployeeInfo);\r\n"],"sourceRoot":""}