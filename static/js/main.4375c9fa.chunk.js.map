{"version":3,"sources":["components/spinner/Spinner.jsx","components/image/Image.jsx","const.js","components/logo/Logo.jsx","components/header/Header.jsx","containers/app/App.js","reducers/employees.js","reducers/rootReducer.js","store/configureStore.js","index.js"],"names":["Spinner","size","className","defaultProps","Img","src","alt","attrs","useState","isLoading","setIsLoading","classes","classnames","image","Image","onload","onLoad","LOGO_TITLE","BASE_URL","ALL_EMPLOYEES_URL","EMPLOYEE_INFO_URL","EMPLOYEE_CREATE_COMMENT_URL","ERROR_MESSAGE","FETCH_EMPLOYEES_START","FETCH_EMPLOYEES_SUCCESS","FETCH_EMPLOYEES_FAILURE","FETCH_EMPLOYEE_INFO_START","FETCH_EMPLOYEE_INFO_SUCCESS","FETCH_EMPLOYEE_INFO_FAILURE","FETCH_CREATE_COMMENT_START","FETCH_CREATE_COMMENT_SUCCESS","FETCH_CREATE_COMMENT_FAILURE","REQUIRED_RULE","MIN_LENGTH_RULE","MAX_LENGTH_RULE","MATCH_REGEXP_RULE","REQUIRED_ERROR_MESSAGE","MIN_LENGTH_ERROR_MESSAGE","MAX_LENGTH_ERROR_MESSAGE","MATCH_RULE_ERROR_MESSAGE","Logo","isTextLogo","url","text","imageSrc","to","Header","withLogo","App","children","initialState","loading","error","items","rootReducer","combineReducers","employees","state","type","payload","employeeIndex","findIndex","id","Number","newItems","newState","index","console","warn","comments","push","title","phone","date","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render","fallback","exact","path","component","lazy","document","getElementById"],"mappings":"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","file":"static/js/main.4375c9fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './spinner.scss';\r\n\r\nconst Spinner = ({ size }) => {\r\n  return (\r\n    <div className={'preloader-main-wrapper'}>\r\n      <div className={`preloader-wrapper ${size} active`}>\r\n        <div className=\"spinner-layer spinner-blue\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"spinner-layer spinner-red\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"spinner-layer spinner-yellow\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"spinner-layer spinner-green\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"gap-patch\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n          <div className=\"circle-clipper right\">\r\n            <div className=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.propTypes = {\r\n  size: PropTypes.oneOf(['big', 'small', '']),\r\n};\r\n\r\nSpinner.defaultProps = {\r\n  size: '',\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nconst Img = ({ src, alt, className, ...attrs }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const classes = classnames(className);\r\n\r\n  const image = new Image();\r\n  image.src = src;\r\n  image.onload = () => {\r\n    setIsLoading(false);\r\n    if (attrs.onLoad) attrs.onLoad();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <img src={src} alt={alt} className={classes} {...attrs} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nImg.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Img;\r\n","export const LOGO_TITLE = 'EMPLOYEE PROJECT';\r\nexport const BASE_URL = 'http://6020j.mocklab.io/';\r\nexport const ALL_EMPLOYEES_URL = '/employees';\r\nexport const EMPLOYEE_INFO_URL = '/employee';\r\nexport const EMPLOYEE_CREATE_COMMENT_URL = '/create-comment';\r\nexport const ERROR_MESSAGE =\r\n  'Something was going wrong! Please, try again later...';\r\n\r\n//actions and reducers\r\nexport const FETCH_EMPLOYEES_START = 'FETCH_EMPLOYEES_START';\r\nexport const FETCH_EMPLOYEES_SUCCESS = 'FETCH_EMPLOYEES_SUCCESS';\r\nexport const FETCH_EMPLOYEES_FAILURE = 'FETCH_EMPLOYEES_FAILURE';\r\n\r\nexport const FETCH_EMPLOYEE_INFO_START = 'FETCH_EMPLOYEE_INFO_START';\r\nexport const FETCH_EMPLOYEE_INFO_SUCCESS = 'FETCH_EMPLOYEE_INFO_SUCCESS';\r\nexport const FETCH_EMPLOYEE_INFO_FAILURE = 'FETCH_EMPLOYEE_INFO_FAILURE';\r\n\r\nexport const FETCH_CREATE_COMMENT_START = 'FETCH_CREATE_COMMENT_START';\r\nexport const FETCH_CREATE_COMMENT_SUCCESS = 'FETCH_CREATE_COMMENT_SUCCESS';\r\nexport const FETCH_CREATE_COMMENT_FAILURE = 'FETCH_CREATE_COMMENT_FAILURE';\r\n\r\n//validation rules\r\n\r\nexport const REQUIRED_RULE = 'required';\r\nexport const MIN_LENGTH_RULE = 'minLength';\r\nexport const MAX_LENGTH_RULE = 'maxLength';\r\nexport const MATCH_REGEXP_RULE = 'match';\r\n\r\nexport const REQUIRED_ERROR_MESSAGE = 'This field is required';\r\nexport const MIN_LENGTH_ERROR_MESSAGE = 'This field should more than';\r\nexport const MAX_LENGTH_ERROR_MESSAGE = 'This field should less than';\r\nexport const MATCH_RULE_ERROR_MESSAGE = 'This field can only contain this symbols -';\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Image from '../image/Image';\r\n\r\nconst Logo = ({ isTextLogo, url, text, imageSrc }) => {\r\n  return (\r\n    <>\r\n      {isTextLogo && (\r\n        <Link to={url} className=\"brand-logo\">\r\n          {text}\r\n        </Link>\r\n      )}\r\n      {isTextLogo || (\r\n        <Link to={url}>\r\n          <Image src={imageSrc} alt={text} />\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nLogo.propTypes = {\r\n  isTextLogo: PropTypes.bool.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  imageSrc: PropTypes.string,\r\n};\r\n\r\nLogo.defaultProps = {\r\n  isTextLogo: true,\r\n  url: '/',\r\n  text: '',\r\n  imageSrc: '',\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { LOGO_TITLE } from '../../const';\r\nimport Logo from '../logo/Logo';\r\n\r\nconst Header = ({ withLogo }) => {\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {withLogo && <Logo isTextLogo={true} url=\"/\" text={LOGO_TITLE} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  withLogo: PropTypes.bool,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  withLogo: false,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport 'materialize-css/sass/materialize.scss';\r\nimport Header from '../../components/header/Header';\r\n\r\nfunction App({ children }) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header withLogo={true}/>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  FETCH_EMPLOYEES_START,\r\n  FETCH_EMPLOYEES_SUCCESS,\r\n  FETCH_EMPLOYEES_FAILURE,\r\n  FETCH_EMPLOYEE_INFO_START,\r\n  FETCH_EMPLOYEE_INFO_SUCCESS,\r\n  FETCH_EMPLOYEE_INFO_FAILURE,\r\n  FETCH_CREATE_COMMENT_START,\r\n  FETCH_CREATE_COMMENT_SUCCESS,\r\n  FETCH_CREATE_COMMENT_FAILURE\r\n} from '../const';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: false,\r\n  items: [],\r\n};\r\n\r\nexport const employees = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_EMPLOYEES_START:\r\n      return { ...state, loading: true };\r\n    case FETCH_EMPLOYEES_SUCCESS:\r\n      return { loading: false, error: false, items: payload };\r\n    case FETCH_EMPLOYEES_FAILURE:\r\n      return { ...state, loading: false, error: true };\r\n    case FETCH_EMPLOYEE_INFO_START:\r\n      return { ...state, loading: true };\r\n    case FETCH_EMPLOYEE_INFO_SUCCESS:\r\n      const employeeIndex = state.items.findIndex(\r\n        ({ id }) => id === Number(payload.id)\r\n      );\r\n      const newItems = [...state.items];\r\n      newItems[employeeIndex] = payload;\r\n\r\n      return { loading: false, error: false, items: newItems };\r\n    case FETCH_EMPLOYEE_INFO_FAILURE:\r\n      return { ...state, loading: false, error: true };\r\n    case FETCH_CREATE_COMMENT_START:\r\n      return { ...state, loading: true };\r\n    case FETCH_CREATE_COMMENT_SUCCESS:\r\n      const newState = {...state};\r\n      const index = state.items.findIndex(\r\n        ({ id }) => id === Number(payload.id)\r\n      );\r\n      console.warn(newState.items[index], index, payload.id);\r\n      newState.items[index].comments.push({title: payload.title, text: payload.text, phone: payload.phone, date: payload.date});\r\n\r\n      return newState;\r\n    case FETCH_CREATE_COMMENT_FAILURE:\r\n      return { ...state, loading: false, error: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport {employees} from './employees';\r\n\r\nconst rootReducer = combineReducers({\r\n    employees\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk, logger)\r\n    )\r\n);\r\n","import React, { Suspense, lazy } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport App from './containers/app/App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/configureStore';\r\nimport Spinner from './components/spinner/Spinner';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App>\r\n        <Suspense fallback={<Spinner />}>\r\n            <Route\r\n                exact\r\n                path={'employees-project/'}\r\n                component={lazy(() => import('./pages/home/Home'))}\r\n            />\r\n            <Route\r\n                path={'employees-project/employee/:id'}\r\n                component={lazy(() => import('./pages/employeeInfo/EmployeeInfo'))}\r\n            />\r\n        </Suspense>\r\n      </App>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}